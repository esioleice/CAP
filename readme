# BMI Calculator – Java GUI Capstone Project

## Classes and Objects (20%)

The main class in the program is the `BMICalculator` class, which extends the `JFrame` class — a real-world application of object-oriented programming involving creation and manipulation of objects. The `BMICalculator` class uses fields like `JTextField`, `JRadioButton`, and `JButton` to manage user interface aspects and access user information.

Swing components such as `tfName`, `tfAge`, and `rbMale` are declared as private to maintain data integrity. Two important methods are implemented: `BMICalculator()` and `saveToFile(...)`, which handle the interface initialization and file output respectively. This structure demonstrates the proper use of fields and methods to build a functional application.

## Class Diagram (15%)

The class diagram provides users with a visual representation of the `BMICalculator` class, detailing its private fields, methods, and inheritance from `JFrame`. It effectively outlines the structure, relationships, and responsibilities within the code. This helps illustrate how the application is organized and how components interact.

![Class Diagram](.diagram.png)

## Four OOP Principles (35%)

### Abstraction

The complexity of BMI calculations, validation, and file output is hidden from the user. Through abstraction, the user interacts only with simple UI elements, while the detailed operations are encapsulated in methods like `BMICalculator()` and `saveToFile(...)`.

### Encapsulation

All GUI components such as text fields and buttons are declared as private. This protects the internal state of the application from outside modification, ensuring that interactions are handled only through defined methods and maintaining application
